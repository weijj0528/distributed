<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
						http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
						http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">

    <task:annotation-driven/>

    <context:component-scan base-package="com.vijay.distributed.front.controller"/>

    <mvc:annotation-driven>
        <!-- 设置输出编码格式 -->
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes" value = "text/plain;charset=UTF-8" />
            </bean>
            <!--<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">-->
            <!--<property name="objectMapper">-->
            <!--<bean class="com.ycmm.crm.web.utils.JsonObjectMapping"/>-->
            <!--</property>-->
            <!--</bean>-->
            <!-- 配置Fastjson支持 -->
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/json;charset=UTF-8</value>
                        <value>application/json</value>
                    </list>
                </property>
                <property name="features">
                    <!--QuoteFieldNames 输出key时是否使用双引号,默认为true-->
                    <!--WriteMapNullValue 是否输出值为null的字段,默认为false-->
                    <!--WriteNullNumberAsZero 数值字段如果为null,输出为0,而非null-->
                    <!--WriteNullListAsEmpty List字段如果为null,输出为[],而非null-->
                    <!--WriteNullStringAsEmpty 字符类型字段如果为null,输出为"",而非null-->
                    <!--WriteNullBooleanAsFalse Boolean字段如果为null,输出为false,而非null-->
                    <list>
                        <value>WriteMapNullValue</value>
                        <value>WriteNullNumberAsZero</value>
                        <value>WriteNullListAsEmpty</value>
                        <value>WriteNullStringAsEmpty</value>
                        <value>WriteNullBooleanAsFalse</value>
                        <value>WriteDateUseDateFormat</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"></bean>
    <!-- 配置静态资源，直接映射到对应的文件夹，不被DispatcherServlet处理，3.04新增功能，需要重新设置spring-mvc-3.0.xsd -->
    <!-- <mvc:resources mapping="/images/**" location="/images/" /> -->
    <!-- <mvc:resources mapping="/js/**" location="/js/" /> -->
    <!-- <mvc:resources mapping="/css/**" location="/css/" /> -->
    <!-- <mvc:resources mapping="/jsp/**" location="/WEB-INF/jsp/" /> -->

    <!-- 开启默认处理 -->
    <!-- 这样静态资源就可以访问了 -->
    <mvc:default-servlet-handler/>
    <context:annotation-config/>
    <!-- 对象与json数据的转换 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>application/json;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
                <!--<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">-->
                <!--<property name="objectMapper">-->
                <!--<bean class="com.fasterxml.jackson.databind.ObjectMapper">-->
                <!--<property name="dateFormat">-->
                <!--<bean class="java.text.SimpleDateFormat">-->
                <!--<constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss"/>-->
                <!--</bean>-->
                <!--</property>-->
                <!--</bean>-->
                <!--</property>-->
                <!--<property name="supportedMediaTypes">-->
                <!--<list>-->
                <!--<value>application/json;charset=UTF-8</value>-->
                <!--</list>-->
                <!--</property>-->
                <!--</bean>-->
                <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                    <property name="dateFormat" value="yyyy/MM/dd HH:mm:ss">
                    </property>
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/json;charset=UTF-8</value>
                            <value>application/json;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="maxUploadSize" value="20560000"/>
        <property name="uploadTempDir" value="fileUpload/temp"/>
        <property name="resolveLazily" value="true"/>
    </bean>

    <!-- 定义ViewResolver组件, 实现根据视图标识获取JSP响应 -->
    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- View中用到的相关技术 -->
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.JstlView"></property>
        <!-- 后缀 -->
        <property name="suffix" value=".jsp"></property>
        <!-- 前缀 -->
        <property name="prefix" value="/jsp/"></property>
    </bean>

</beans>