apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'

group 'com.vijay'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.5

ext {
    env = "snapshot"
}

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

repositories {
    mavenLocal()
    // 局域网Maven仓库
    maven {
        url "http://192.168.1.14:8081/repository/maven-releases/"
    }
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    compile group: 'com.vijay', name: 'distributed.core', version: '1.0-SNAPSHOT'
}

//  dubbox打包
task jarDubbox(type: Jar) {
    baseName project.name
    classifier "dubbo"
    from("$buildDir/classes/main") {
        include "com/vijay/distributed/demo/modle/*"
        include "com/vijay/distributed/demo/service/*"
        exclude "com/vijay/distributed/demo/service/impl/*"
    }
}

// 将src/main/java编译的class打包成${project.name}-${version}.jar放入到build/libs目录下,配置文件没必要打包 可执行
task jarWithoutResources(type: Jar) {
    dependsOn jarDubbox
    baseName project.name
    String someString = ''
    configurations.runtime.each { someString = someString + " lib/" + it.name } //遍历项目的所有依赖的jar包赋值给变量someString
    manifest {
        attributes 'Implementation-Title': 'Gradle By Weiun'
        attributes 'Implementation-Version': version
        attributes 'Main-Class': 'com.vijay.distributed.demo.Main'
        attributes 'Class-Path': someString
    }
    from("$buildDir/classes/main") {
        exclude "com/vijay/distributed/demo/MyGenerator.class"
    }
    from("$buildDir/resources/main") {
        exclude "config/release/*"
        exclude "config/snapshot/*"
        exclude "config/conf.properties"
        exclude "log4j.properties"
    }
    from("$buildDir/resources/main/config/$env") {
        include "config/$env/log4j.properties"
        into "log4j.properties"
    }
    from("$buildDir/resources/main/config/$env") {
        include "config/$env/conf.properties"
        into "config/$env/conf.properties"
    }
}

//上传到nexus
publishing {
    publications {
        //jar构件配置
        mavenJava(MavenPublication) {
            version = "$project.version"
            artifactId = "$project.name"
            groupId = "$project.group"
            // 指定我们需要上传的内容
            artifact("$buildDir/libs/${project.getName()}-${project.getVersion()}-dubbo.jar") {
                // These values will be used instead of the values from the task. The task values will not be updated.
                classifier "dubbo"
                extension "jar"
            }
            artifact("$buildDir/libs/${project.getName()}-${project.getVersion()}.jar") {
                extension "jar"
            }
            pom.withXml {
                asNode().appendNode('description', 'A demonstration of maven POM customization')
                def depNodes = asNode().appendNode('dependencies')
                project.configurations.collectMany { it.allDependencies }.toSet().findAll {
                    it instanceof ProjectDependency || it instanceof ExternalModuleDependency
                }.each { dep ->
                    def depNode = depNodes.appendNode('dependency')
                    depNode.appendNode('groupId', dep.getGroup())
                    depNode.appendNode('artifactId', dep.getName())
                    depNode.appendNode('version', dep.getVersion())
                    depNode.appendNode('scope', 'compile')
                }
            }
        }
    }
    repositories {
        maven {
            url "http://192.168.1.14:8081/repository/maven-releases/"
            credentials {
                username 'admin'
                password 'admin123'
            }
        }
    }
}
